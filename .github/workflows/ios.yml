name: iOS Build & Test

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build-test:
    runs-on: macos-15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Homebrew
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/Cellar
            /opt/homebrew/Cellar
          key: brew-${{ runner.os }}-${{ hashFiles('project.yml') }}

      - name: Install XcodeGen
        run: |
          brew update
          brew install xcodegen
          echo "$(brew --prefix)/bin" >> $GITHUB_PATH
          # Verify installation and path
          xcodegen -version || "$(brew --prefix)/bin/xcodegen" -version

      - name: Generate Xcode project
        run: |
          "$(brew --prefix)/bin/xcodegen" generate

      - name: Cache DerivedData
        uses: actions/cache@v4
        with:
          path: /tmp/goodbook_dd
          key: deriveddata-${{ runner.os }}-${{ hashFiles('**/*.swift', 'project.yml') }}
          restore-keys: |
            deriveddata-${{ runner.os }}-

      - name: Build & Test (Unit + UI)
        run: |
          xcodebuild -project GoodBook.xcodeproj \
            -scheme GoodBook \
            -sdk iphonesimulator \
            -configuration Debug \
            -destination 'platform=iOS Simulator,name=iPhone 16' \
            -derivedDataPath /tmp/goodbook_dd \
            test | xcpretty || true
          # Rerun without xcpretty if not installed
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            set -e
            xcodebuild -project GoodBook.xcodeproj \
              -scheme GoodBook \
              -sdk iphonesimulator \
              -configuration Debug \
              -destination 'platform=iOS Simulator,name=iPhone 16' \
              -derivedDataPath /tmp/goodbook_dd \
              test
          fi

      - name: Update README build version (main only)
        if: github.ref == 'refs/heads/main'
        run: |
          set -euo pipefail
          SHORT_SHA=$(git rev-parse --short HEAD)
          DATE_UTC=$(date -u +"%Y-%m-%d %H:%M:%SZ")
          MSG="Latest: ${SHORT_SHA} (${DATE_UTC})"
          awk -v msg="$MSG" '
            BEGIN{inblk=0}
            /<!-- build-version: start -->/{print; inblk=1; getline; print msg; while(getline){ if($0 ~ /<!-- build-version: end -->/){ print; inblk=0; next } }}
            { if(!inblk) print }
          ' README.md > README.md.tmp
          mv README.md.tmp README.md
          if git diff --quiet README.md; then
            echo "No README changes to commit"
            exit 0
          fi
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add README.md
          git commit -m "docs(readme): update build version to ${SHORT_SHA} [skip ci]"
          git push


